<?php

/*
This file is generated by https://github.com/nok/sklearn-porter/

Estimator:
    {estimator_name}

Documentation:
    {estimator_url}

Usage:
    1. Execute a prediction:
        $ php -f {class_name}.php <feature_1>  ... <feature_{n_features}>
*/

class {class_name} {{

    public function __construct($nClasses, $vectors, $coeffs, $inters, $weights, $kernel, $gamma, $coef0, $degree) {{
        $this->nClasses = $nClasses;
        $this->classes = array_fill(0, $nClasses, 0);
        for ($i = 0; $i < $nClasses; $i++) {{
            $this->classes[$i] = $i;
        }}

        $this->vectors = $vectors;
        $this->coeffs = $coeffs;
        $this->inters = $inters;
        $this->weights = $weights;

        $this->kernel = strtoupper($kernel);
        $this->gamma = $gamma;
        $this->coef0 = $coef0;
        $this->degree = $degree;
    }}

    {method}

}}

if ($argc > 1) {{

    // Features:
    array_shift($argv);
    $features = $argv;

    // Parameters:
    {vectors}
    {coeffs}
    {inters}
    {weights}

    // Prediction:
    $clf = new {class_name}({n_classes}, $vectors, $coeffs, $inters, $weights, "{kernel}", {gamma}, {coef0}, {degree});
    $prediction = $clf->{method_name}($features);
    fwrite(STDOUT, $prediction);

}}