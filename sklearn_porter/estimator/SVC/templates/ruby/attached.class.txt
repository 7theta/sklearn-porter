# This file is generated by https://github.com/nok/sklearn-porter/
#
# Estimator:
#     {estimator_name}
#
# Documentation:
#     {estimator_url}
#
# Further usage:
#     1. Execute a prediction:
#         $ ruby {class_name}.rb <feature_1>  ... <feature_{n_features}>

class {class_name}

	def initialize (n_classes, vectors, coeffs, inters, weights, kernel, gamma, coef0, degree)
		@n_classes = n_classes
		@classes = Array.new(n_classes)
		for i in 0 ... n_classes
			@classes[i] = i
		end

		@vectors = vectors
		@coeffs = coeffs
		@inters = inters
		@weights = weights

		@kernel = kernel.upcase
		@gamma = gamma
		@coef0 = coef0
		@degree = degree
	end

	{method}

end

if ARGV.length == {n_features}

	# Features:
	features = ARGV.collect {{ |i| i.to_f }}

	# Parameters:
	{vectors}
	{coeffs}
	{inters}
	{weights}

	# Prediction:
	clf = {class_name}.new {n_classes}, vectors, coeffs, inters, weights, "{kernel}", {gamma}, {coef0}, {degree}
	estimation = clf.{method_name} features
	puts estimation

end