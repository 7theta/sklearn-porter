/**
 * This file is generated by https://github.com/nok/sklearn-porter/
 *
 * Estimator:
 *     {estimator_name}
 *
 * Documentation:
 *     {estimator_url}
 *
 * Usage:
 *     1. Compile the generated source code:
 *         $ javac {class_name}.java
 *     2. Execute a prediction:
 *         $ java {class_name} <feature_1>  ... <feature_{n_features}>
 */

class {class_name} {{

    private double[] priors;
    private double[][] negatives;
    private double[][] deltas;

    public {class_name}(double[] priors, double[][] negatives, double[][] deltas) {{
        this.priors = priors;
        this.negatives = negatives;
        this.deltas = deltas;
    }}

    {method}

    public static void main(String[] args) {{
        if (args.length == {n_features}) {{

            // Features:
            double[] features = new double[args.length];
            for (int i = 0, l = args.length; i < l; i++) {{
                features[i] = Double.parseDouble(args[i]);
            }}

            // Parameters:
            final {priors}
            final {negatives}
            final {deltas}

            // Prediction:
            {class_name} clf = new {class_name}(priors, negatives, deltas);
            int estimation = clf.{method_name}(features);
            System.out.println(estimation);

        }}
    }}
}}