{% extends 'base.attached.class' %}

{% block content %}
#include <stdlib.h>
#include <stdio.h>
#include <math.h>

int predict(double features[{{ n_features }}]) {
    int i;
    int n_classes = {{ n_classes }};
    int classes[n_classes];

    for (i = 0; i < n_classes; i++) {
        classes[i] = 0;
    }
    {{ tree | indent(4, True) }}

    int idx = 0;
    for (i = 0; i < n_classes; i++) {
        idx = classes[i] > classes[idx] ? i : idx;
    }
    return idx;
}

int main(int argc, const char * argv[]) {
    /* Features: */
    double features[argc-1];
    int i;
    for (i = 1; i < argc; i++) {
        features[i-1] = atof(argv[i]);
    }

    /* Prediction: */
    {% if is_test %}
    printf("%d\n", predict(features));
    {% else %}
    printf("Predicted class: #%d\n", predict(features));
    {% endif %}
    return 0;
}
{% endblock %}