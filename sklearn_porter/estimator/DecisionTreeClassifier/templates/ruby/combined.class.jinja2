{% extends 'base.combined.class' %}

{% block content %}
{% if is_test %}
require 'json'
{% endif %}
class {{ class_name }}
    def self.predict (features)
        classes = Array.new({{ n_classes }}, 0)
        {{ tree | indent(4, True) }}

        pos = classes.each_with_index.select {|e, i| e==classes.max}.map &:last
        return pos.min
    end
end

if ARGV.length == {{ n_features }}

    # Features:
    features = ARGV.collect { |i| i.to_f }

    # Get class prediction:
    prediction = {{ class_name }}.predict features
    {% if not is_test %}
    puts "Predicted class: ##{prediction}"
    {% endif %}

    {% if is_test %}
    puts JSON.generate({:predict => prediction, :predict_proba => []})
    {% endif %}
end
{% endblock %}